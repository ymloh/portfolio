{"version":3,"sources":["ItemMedia.js","PortfolioItem.js","App.js","reportWebVitals.js","index.js"],"names":["videoFileExts","ItemMedia","props","mediaExt","source","split","length","toLowerCase","isVideo","includes","mediaRef","useRef","reposition","targetTop","window","innerHeight","current","getBoundingClientRect","height","style","top","console","table","className","isActive","isModal","join","autoPlay","loop","playsInline","muted","onClick","ref","onLoadedData","src","type","ext","alt","onLoad","PortfolioItem","useState","setActive","onMouseEnter","e","onMouseLeave","title","mediaSource","toggleModal","projId","href","pagelink","target","rel","repolink","desc","projects","id","App","modal","setModal","modalProject","setModalProject","find","proj","log","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a59c0701.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\n\r\nconst videoFileExts = ['mp4', 'm4v', 'webm'];\r\n\r\nfunction ItemMedia(props) {\r\n  let media;\r\n\r\n  let mediaExt = props.source && props.source.split('.');\r\n  mediaExt = mediaExt && mediaExt[mediaExt.length - 1].toLowerCase();\r\n  const isVideo = videoFileExts.includes(mediaExt);\r\n\r\n  const mediaRef = useRef();\r\n\r\n  const reposition = () => {\r\n    const targetTop = (window.innerHeight - mediaRef.current.getBoundingClientRect().height) / 2;\r\n    mediaRef.current.style.top = `${targetTop}px`;\r\n    console.table(mediaRef.current.getBoundingClientRect());\r\n  }\r\n\r\n  if (isVideo) {\r\n    media = (\r\n      <video\r\n        className={`item-media ${[(props.isActive || props.isModal) && 'active', props.isModal && 'front-and-center'].join(' ')}`}\r\n        autoPlay={true}\r\n        loop={true}\r\n        playsInline={true}\r\n        muted={true}\r\n        onClick={props.onClick}\r\n        ref={mediaRef}\r\n        onLoadedData={props.isModal && reposition}\r\n      >\r\n        <source src={props.source} type={`video/${props.ext || 'webm'}`} />\r\n      </video>\r\n    );\r\n  }\r\n  else {\r\n    media = (\r\n      <img\r\n        className={`item-media ${[(props.isActive || props.isModal) && 'active', props.isModal && 'front-and-center'].join(' ')}`}\r\n        src={props.source}\r\n        alt='Project thumbnail'\r\n        onClick={props.onClick}\r\n        ref={mediaRef}\r\n        onLoad={reposition}\r\n      />\r\n    );\r\n  }\r\n\r\n  return media;\r\n}\r\n\r\nexport default ItemMedia\r\n","import React, { useState } from 'react'\r\nimport ItemMedia from './ItemMedia'\r\nimport './PortfolioItem.css'\r\n\r\nfunction PortfolioItem(props) {\r\n\r\n  const [isActive, setActive] = useState(false);\r\n\r\n  // useEffect(() => console.log(`isActive: ${isActive}`), [isActive]);\r\n\r\n  const mouseEnterHandler = e => {\r\n    setActive(true);\r\n  }\r\n\r\n  const mouseExitHandler = e => {\r\n    setActive(false);\r\n  }\r\n\r\n  const mediaClickHandler = e => {\r\n    props.toggleModal(props.projId);\r\n  }\r\n\r\n  return (\r\n    <div className={`item ${isActive && 'active'}`} onMouseEnter={mouseEnterHandler} onMouseLeave={mouseExitHandler}>\r\n      <span className={`item-title ${isActive && 'active'}`}>{props.title}</span>\r\n      <div className='item-thumb'>\r\n        <ItemMedia source={props.mediaSource} isActive={isActive} onClick={mediaClickHandler} />\r\n      </div>\r\n      <div className='item-links'>\r\n        <a className={`${isActive && 'active'}`} href={props.pagelink} target='_blank' rel='noreferrer'>\r\n          <div>View Page</div>\r\n        </a>\r\n        <a className={`${isActive && 'active'}`} href={props.repolink} target='_blank' rel='noreferrer'>\r\n          <div>View Repo</div>\r\n        </a>\r\n      </div>\r\n      <div className='item-desc'>\r\n        {props.desc}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PortfolioItem\r\n","import PortfolioItem from './PortfolioItem'\r\nimport ItemMedia from './ItemMedia'\r\nimport { useState } from 'react'\r\nimport './App.css'\r\nimport './Portfolio.css'\r\n\r\nconst projects = [\r\n  {\r\n    id: 1,\r\n    title: 'Recipe Logger',\r\n    mediaSource: './video/recipe-logger-demo-low.webm',\r\n    desc: 'Quick React app designed as a 72-hour challenge to simulate pre-interview technical challenge. This is the first React app I built from the ground up. Double-click the background to add a recipe.',\r\n    pagelink: 'https://jwd05meng.github.io/recipe-logger/',\r\n    repolink: 'https://github.com/JWD05Meng/recipe-logger'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Template Mimic',\r\n    mediaSource: './video/template-challenge-low.webm',\r\n    desc: '48-hour challenge: mimic an existing template in HTML and Bootstrap. The ↖ left side of the thumbnail shows my attempt; the right ↗ side shows the actual page.',\r\n    pagelink: 'https://jwd05meng.github.io/week7challenge/',\r\n    repolink: 'https://github.com/JWD05Meng/week7challenge'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Task Planner',\r\n    mediaSource: './video/task-planner-demo.webm',\r\n    desc: 'Final team project for Generation / Academy Xi programme. The goal was to work in teams of two to produce a Task Planner app within three sprints. I learnt a lot from this experience and made a most wonderful new friend :)',\r\n    pagelink: 'https://hlc64.github.io/taskplannerproject/',\r\n    repolink: 'https://github.com/hlc64/taskplannerproject'\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Website Mockup',\r\n    mediaSource: './video/justloud-demo.webm',\r\n    desc: 'A quick mockup created for a company looking to get their website published quickly. Work was carried out part-time over several days. Unfortunately, the company\\'s liason has since been tied up with other matters, and site development has been put on hold.',\r\n    pagelink: 'https://ymloh.github.io/justloud/',\r\n    repolink: 'https://github.com/ymloh/justloud'\r\n  }\r\n]\r\n\r\nfunction App() {\r\n  const [modal, setModal] = useState(false);\r\n  const [modalProject, setModalProject] = useState(null);\r\n\r\n  const toggleModal = (projId) => {\r\n    setModalProject(projects.find(proj => proj.id === projId));\r\n    setModal(!modal);\r\n    console.log('toggleModal called');\r\n  }\r\n\r\n  return (\r\n    <div className='portfolio'>\r\n      {projects.map(proj => <PortfolioItem\r\n        title={proj.title}\r\n        mediaSource={proj.mediaSource}\r\n        desc={proj.desc}\r\n        pagelink={proj.pagelink}\r\n        repolink={proj.repolink}\r\n        key={proj.id}\r\n        projId={proj.id}\r\n        toggleModal={toggleModal}\r\n      />)}\r\n      <div id='modal' className={`modal ${modal ? '' : 'hidden'}`} onClick={() => setModal(false)}>\r\n        {modal && <ItemMedia source={modalProject.mediaSource} isModal={true} />}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}